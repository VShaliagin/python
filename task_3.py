'''
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере.
Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована.
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.'''

class My_exception():
    def __init__(self, *args):
        self.user_list = []

    def date_list(self):
        while True:
            element = input(f'Введите новый элемент списка. Или введите stop для прекращения пополнения списка\n')
            #Проверка на наличие команды остановки
            if element.lower() == 'stop':
                return print(self.user_list)
                break
            else:
                try:
                    #Проверка на возможность преобразования к числу введенного пользователем значения
                    int(element)
                except ValueError as e:
                    print(f'Необходимо вводить числовые значения. Ошибка - {e}')
                    continue
                else:
                    self.user_list.append(int(element))
(My_exception().date_list())