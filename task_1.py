'''Создать класс TrafficLight (светофор) и определить у него один атрибут color (цвет) и метод running (запуск).
Атрибут реализовать как приватный.
В рамках метода реализовать переключение светофора в режимы: красный, желтый,
зеленый. Продолжительность первого состояния (красный) составляет 7 секунд, второго (желтый) — 2 секунды, третьего
(зеленый) — на ваше усмотрение.
Переключение между режимами должно осуществляться только в указанном порядке (красный,  желтый, зеленый).
Проверить работу примера, создав экземпляр и вызвав описанный метод.'''
from time import sleep
from random import choice
#Создаем класс светофор
class TrafficLight:
    __color = ['красный', 'желтый', 'зеленый']
    __time = [7, 3, 5]
    def running():
        step_work = 0
        while step_work < 3:
            print(f'На световоре светит {TrafficLight.__color[step_work]}')
            #для остановки программы воспользуемся sleep
            sleep(TrafficLight.__time[step_work])
            step_work += 1

'''Задачу можно усложнить, реализовав проверку порядка режимов, и при его нарушении выводить соответствующее 
сообщение и завершать скрипт.'''

class TrafficLight_2:
    def __init__(self):
        __color = ['красный', 'желтый', 'зеленый']

    def running():
        __color = ['красный', 'желтый', 'зеленый']
        colors =[]
        #my_dict = {'красный': 7, 'желтый': 3, 'зеленый': 5}

        while True:
            colors.append(choice(__color))
            # Сравниваем сгенерированный цвет светофора и предыдущий(Исключено повторение цветов) повтор выбора
            if len(colors) > 1:
                if colors[-2] == colors[-1]:
                    print(f'Ошибка нарушена последовательность цветов сигнала светофора. После {colors[-2]} '
                          f'не может быть включенным снова {colors[-1]}')
                    break
            if len(colors) >= 2:
                # Сравниваем сгенерированный цвет светофора и предыдущий на наличие пропука желтого состояния
                if (colors[-1] == 'красный' or colors[-1] == 'зеленый') and colors[-2] != 'желтый':
                    print(f'Ошибка нарушена последовательность цветов сигнала светофора. После {colors[-2]} не может '
                          f'быть включенным {colors[-1]}')
                    break
                # Сравниваем чтобы через состояние не зажигался один и тот же свет светофора, исключение желтый
            if len(colors) >= 3:
                if colors[-1] != 'желтый' and colors[-1] == colors[-3]:
                    print(f'Ошибка нарушена последовательность цветов сигнала светофора. После {colors[-3]} '
                          f'зажегся {colors[-2]} не может быть включенным снова {colors[-1]}')
                    break
            print(f'На световоре светит {colors[-1]}')

            #таймер
            #n = my_dict.get(colors[-1])
            #sleep(TrafficLight_2.__time[n])

TrafficLight.running()
print(f'Случайный генератор сигналов светофора. Проверка на правильность включения сигналов')
TrafficLight_2.running()